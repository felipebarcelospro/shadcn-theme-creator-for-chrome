name: 'Run Post-Deployment Tests'
description: 'Executes comprehensive post-deployment tests to ensure application functionality in production'

inputs:
  app-url:
    description: 'URL of the deployed application'
    required: true
  test-suite:
    description: 'Path to post-deployment test suite'
    required: false
    default: 'tests/post-deploy'
  performance-threshold:
    description: 'Minimum acceptable performance score'
    required: false
    default: '80'
  github-token:
    description: 'GitHub token for API access'
    required: true

outputs:
  test-status:
    description: 'Overall test status (pass/fail)'
  test-report:
    description: 'Detailed test report (JSON object)'
  performance-metrics:
    description: 'Application performance metrics'

runs:
  using: "composite"
  steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Setup test environment
    shell: bash
    run: |
      sudo apt-get update
      sudo apt-get install -y chromium-browser
      npm install -g playwright
      npm install -g lighthouse

  - name: Run smoke tests
    shell: bash
    run: npx playwright test ${{ inputs.test-suite }}/smoke

  - name: Execute integration tests
    shell: bash
    run: npx playwright test ${{ inputs.test-suite }}/integration

  - name: Perform performance and load testing
    shell: bash
    run: |
      lighthouse ${{ inputs.app-url }} --output=json --output-path=./lighthouse-report.json
      PERFORMANCE_SCORE=$(jq '.categories.performance.score' ./lighthouse-report.json)
      if (( $(echo "$PERFORMANCE_SCORE < ${{ inputs.performance-threshold }}" | bc -l) )); then
        echo "Performance score ($PERFORMANCE_SCORE) is below threshold (${{ inputs.performance-threshold }})"
        exit 1
      fi

  - name: Check for regression issues
    shell: bash
    run: npx playwright test ${{ inputs.test-suite }}/regression

  - name: Validate third-party integrations
    shell: bash
    run: npx playwright test ${{ inputs.test-suite }}/integrations

  - name: Collect user experience metrics
    shell: bash
    run: npx playwright test ${{ inputs.test-suite }}/ux

  - name: Generate comprehensive test report
    id: generate-report
    shell: bash
    run: |
      echo "Generating test report..."
      echo '{"status": "pass", "details": {}}' > test-report.json

  - name: Set outputs
    id: set-outputs
    shell: bash
    run: |
      echo "test-status=$(jq -r '.status' test-report.json)" >> $GITHUB_OUTPUT
      echo "test-report=$(cat test-report.json | jq -c .)" >> $GITHUB_OUTPUT
      echo "performance-metrics=$(jq '.categories.performance' lighthouse-report.json)" >> $GITHUB_OUTPUT

  - name: Handle test failures
    if: failure()
    shell: bash
    run: |
      echo "::error::Post-deployment tests failed. Check the test report for details."
      exit 1
