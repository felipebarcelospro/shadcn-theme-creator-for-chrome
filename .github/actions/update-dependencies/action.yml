name: Update Dependencies

description: 'Update project dependencies based on security and version checks'

inputs:
  repository-context:
    description: 'JSON string containing repository context information'
    required: true

outputs:
  updates-list:
    description: 'JSON string containing the list of updated dependencies'
    value: ${{ steps.update-deps.outputs.updates-list }}

runs:
  using: 'composite'
  steps:
  - name: Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: '20'

  - name: Install dependencies
    run: npm install @actions/core @actions/github
    shell: bash

  - name: Update dependencies
    id: update-deps
    run: |
      const core = require('@actions/core');
      const github = require('@actions/github');
      const { execSync } = require('child_process');

      try {
        const repoContext = JSON.parse(core.getInput('repository-context'));

        // Update npm packages
        console.log('Updating npm packages...');
        execSync('npm update', { stdio: 'inherit' });

        // Get list of updated packages
        const updatedPackages = JSON.parse(execSync('npm outdated --json').toString());

        // Format updates list
        const updatesList = Object.entries(updatedPackages).map(([pkg, info]) => {
          return `${pkg}: ${info.current} -> ${info.latest}`;
        });

        core.setOutput('updates-list', JSON.stringify(updatesList));

        console.log('Dependencies updated successfully.');
      } catch (error) {
        core.setFailed(`Error updating dependencies: ${error.message}`);
      }
    shell: bash

  - name: Commit changes
    run: |
      git config --local user.email "action@github.com"
      git config --local user.name "GitHub Action"
      git add package.json package-lock.json
      git commit -m "Update dependencies" || echo "No changes to commit"
      git push
    shell: bash
