name: Release

on:
  push:
    branches: ["main"]

jobs:
  release:
    runs-on: ubuntu-latest
    needs: [check_project_changes, build_web, build_extension, build_packages, generate_documentation]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (contains(fromJson(needs.check_project_changes.outputs.changes), 'web') || contains(fromJson(needs.check_project_changes.outputs.changes), 'extension'))
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Cache Turbo dependencies
        uses: actions/cache@v3
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install Dependencies
        run: yarn install

      - name: Determine Version
        id: version
        run: |
          current_version=$(jq -r '.version' package.json)
          new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Generate Release Notes with AI
        id: changelog
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: |
          commits=$(git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%s")
          changelog_response=$(curl -X POST https://api.groq.com/openai/v1/chat/completions \
            -H "Authorization: Bearer $GROQ_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "llama-3.1-70b-versatile",
              "messages": [
                {"role": "system", "content": "You are an AI assistant tasked with creating detailed and user-friendly changelogs. Respond in JSON format with a key 'changelog'."},
                {"role": "user", "content": "Create a detailed and user-friendly changelog for the following commits: \"'"$commits"'\""}
              ],
              "temperature": 0.3,
              "response_format": {"type": "json_object"}
            }')
          echo "changelog=$(echo $changelog_response | jq -r '.choices[0].message.content' | jq -r '.changelog')" >> $GITHUB_OUTPUT

      - name: Update package.json
        run: |
          jq '.version = "${{ steps.version.outputs.new_version }}"' package.json > package.json.tmp
          mv package.json.tmp package.json

      - name: Commit Version Update
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ github.token }}

      - name: Download Chrome Extension Artifact
        uses: actions/download-artifact@v4
        with:
          name: chrome-extension
          path: releases

      - name: Attach Chrome Extension to Release
        uses: softprops/action-gh-release@v1
        with:
          files: releases/STC_Beta_${{ env.version }}.zip
          tag_name: v${{ steps.version.outputs.new_version }}
          token: ${{ github.token }}