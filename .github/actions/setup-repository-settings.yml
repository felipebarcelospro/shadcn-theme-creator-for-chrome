name: Setup Repository Settings

description: Configures repository settings based on provided parameters

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  has-wiki:
    description: 'Enable or disable wiki for the repository'
    required: true
    type: boolean
  has-issues:
    description: 'Enable or disable issues for the repository'
    required: true
    type: boolean
  has-projects:
    description: 'Enable or disable projects for the repository'
    required: true
    type: boolean
  allow-squash-merge:
    description: 'Allow squash merging for pull requests'
    required: true
    type: boolean
  allow-merge-commit:
    description: 'Allow merge commits for pull requests'
    required: true
    type: boolean
  allow-rebase-merge:
    description: 'Allow rebase merging for pull requests'
    required: true
    type: boolean
  delete-branch-on-merge:
    description: 'Automatically delete head branches after pull requests are merged'
    required: true
    type: boolean

runs:
  using: 'composite'
  steps:
  - name: Setup Node.js
    uses: actions/setup-node@v3
    with:
      node-version: '20'

  - name: Install dependencies
    shell: bash -l {0}
    run: |
      npm install @octokit/rest

  - name: Configure repository settings
    shell: bash -l {0}
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
      HAS_WIKI: ${{ inputs.has-wiki }}
      HAS_ISSUES: ${{ inputs.has-issues }}
      HAS_PROJECTS: ${{ inputs.has-projects }}
      ALLOW_SQUASH_MERGE: ${{ inputs.allow-squash-merge }}
      ALLOW_MERGE_COMMIT: ${{ inputs.allow-merge-commit }}
      ALLOW_REBASE_MERGE: ${{ inputs.allow-rebase-merge }}
      DELETE_BRANCH_ON_MERGE: ${{ inputs.delete-branch-on-merge }}
    run: |
      node -e '
      const { Octokit } = require("@octokit/rest");
      const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

      async function setupRepositorySettings() {
        const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");

        try {
          await octokit.repos.update({
            owner,
            repo,
            has_wiki: process.env.HAS_WIKI === "true",
            has_issues: process.env.HAS_ISSUES === "true",
            has_projects: process.env.HAS_PROJECTS === "true",
            allow_squash_merge: process.env.ALLOW_SQUASH_MERGE === "true",
            allow_merge_commit: process.env.ALLOW_MERGE_COMMIT === "true",
            allow_rebase_merge: process.env.ALLOW_REBASE_MERGE === "true",
            delete_branch_on_merge: process.env.DELETE_BRANCH_ON_MERGE === "true"
          });
          console.log("Repository settings updated successfully");
        } catch (error) {
          console.error("Error updating repository settings:", error);
          process.exit(1);
        }
      }

      setupRepositorySettings();
      '

outputs:
  settings-updated:
    description: 'Indicates whether the repository settings were successfully updated'
    value: ${{ steps.configure-settings.outputs.settings-updated }}
