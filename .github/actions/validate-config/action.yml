name: 'Validate Config'
description: 'Validates the existence and structure of the config.yml file in the repository'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true

outputs:
  config-validation-status:
    description: 'Boolean indicating if the configuration is valid'
  installation-status:
    description: 'Status of the installation process'

runs:
  using: 'composite'
  steps:
  - name: Check package manager
    shell: bash
    run: |
      if [ "yarn" = "npm" ]; then
        echo "installation-status=success" >> $GITHUB_OUTPUT
      fi

  - name: Validate config
    uses: actions/github-script@v7
    with:
      github-token: ${{ inputs.github-token }}
      script: |
        const fs = require('fs');
        const yaml = require('js-yaml');

        const CONFIG_PATH = '.github/config.yml';

        try {
          if (!fs.existsSync(CONFIG_PATH)) {
            core.setFailed('config.yml file not found in .github directory');
            core.setOutput('config-validation-status', 'false');
            return;
          }

          const configContent = fs.readFileSync(CONFIG_PATH, 'utf8');
          const config = yaml.load(configContent);

          const requiredKeys = ['repository', 'issue_management', 'pr_management', 'release_management', 'security_dependency_management', 'metrics_generation', 'packages', 'plugins'];

          for (const key of requiredKeys) {
            if (!(key in config)) {
              core.setFailed(`Required key '${key}' not found in config.yml`);
              core.setOutput('config-validation-status', 'false');
              return;
            }
          }

          core.setOutput('config-validation-status', 'true');
        } catch (error) {
          core.setFailed(`Error validating config: ${error.message}`);
          core.setOutput('config-validation-status', 'false');
        }
