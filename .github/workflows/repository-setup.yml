name: Repository Setup Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions: {}

jobs:
  check-repository-setup:
    runs-on: ubuntu-latest
    outputs:
      is-configured: ${{ steps.check-config.outputs.is-configured }}
      setup-context: ${{ steps.setup-context.outputs.context }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check repository configuration
        id: check-config
        run: |
          if [ -f ".github/enabled" ]; then
            echo "is-configured=true" >> $GITHUB_OUTPUT
          else
            echo "is-configured=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Context and Prerequisites
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          debug: 'true'

  repository-setup:
    needs: check-repository-setup
    if: needs.check-repository-setup.outputs.is-configured == 'false'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      SETUP_CONTEXT: ${{ needs.check-repository-setup.outputs.setup-context }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ env.GH_TOKEN }}

      - name: Setup Repository Branches
        uses: ./.github/actions/setup-repository-branchs
        with:
          branches: ${{ env.SETUP_CONTEXT.mainBranches }}
          base-branch: 'main'
          github-token: ${{ env.GH_TOKEN }}
        continue-on-error: true

      - name: Debug Branch Creation
        if: failure()
        run: |
          echo "Debug: An error occurred during branch creation/update"
          echo "operation-status=failed" >> $GITHUB_OUTPUT
        
      - name: Generate Content
        id: generate-content
        uses: ./.github/actions/ai-generate-content
        with:
          ai-api-key: ${{ secrets.GOOGLE_AI_API_KEY }}
          content-type: "repository_docs"
          context-data: ${{ env.SETUP_CONTEXT }}
          template-path: .github/templates/repository_setup_template.md
          tone: ${{ env.SETUP_CONTEXT.config.repository.documentation_tone }}
          max-length: ${{ env.SETUP_CONTEXT.config.repository.documentation_max_length }}

      - name: Setup Branch Protection Rules
        uses: ./.github/actions/apply-branch-protection
        with:
          github-token: ${{ env.GH_TOKEN }}
          branch-patterns: ${{ env.SETUP_CONTEXT.protectedBranches }}
          protection-rules: ${{ env.SETUP_CONTEXT.config.repository.version_control.branch_protection_rules }}

      - name: Create Wiki Pages
        uses: ./.github/actions/create-wiki-page
        with:
          github-token: ${{ env.GH_TOKEN }}
          page-name: "Git Flow Process"
          page-content: ${{ steps.generate-content.outputs.generated-content }}

      - name: Create Discussion Posts
        uses: ./.github/actions/create-discussion-post
        with:
          discussion-title: "Welcome to the Repository"
          discussion-content: ${{ steps.generate-content.outputs.generated-content }}
          category: ${{ env.SETUP_CONTEXT.config.repository.initial_discussion_category }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Setup Issue Labels
        uses: ./.github/actions/setup-issue-labels
        with:
          github-token: ${{ env.GH_TOKEN }}
          labels: ${{ env.SETUP_CONTEXT.config.issue_management.auto_label.rules }}

      - name: Setup Project Board
        uses: ./.github/actions/setup-project-board
        with:
          github-token: ${{ env.GH_TOKEN }}
          columns: ${{ env.SETUP_CONTEXT.config.repository.project_board_columns }}

      - name: Setup Repository Settings
        uses: ./.github/actions/setup-repository-settings
        with:
          github-token: ${{ env.GH_TOKEN }}
          has-wiki: ${{ env.SETUP_CONTEXT.config.repository.has_wiki }}
          has-issues: ${{ env.SETUP_CONTEXT.config.repository.has_issues }}
          has-projects: ${{ env.SETUP_CONTEXT.config.repository.has_projects }}
          allow-squash-merge: ${{ env.SETUP_CONTEXT.config.repository.version_control.merge_strategy.allow_squash_merge }}
          allow-merge-commit: ${{ env.SETUP_CONTEXT.config.repository.version_control.merge_strategy.allow_merge_commit }}
          allow-rebase-merge: ${{ env.SETUP_CONTEXT.config.repository.version_control.merge_strategy.allow_rebase_merge }}
          delete-branch-on-merge: ${{ env.SETUP_CONTEXT.config.repository.version_control.delete_branch_on_merge }}

      - name: Setup Dependabot
        uses: ./.github/actions/setup-dependabot
        with:
          github-token: ${{ env.GH_TOKEN }}
          ecosystems: ${{ env.SETUP_CONTEXT.config.security_dependency_management.security_check.tools }}
          schedule: ${{ env.SETUP_CONTEXT.config.security_dependency_management.schedule }}

      - name: Setup CODEOWNERS
        uses: ./.github/actions/setup-codeowners
        with:
          github-token: ${{ env.GH_TOKEN }}
          repository-admins: ${{ env.SETUP_CONTEXT.config.repository.default_code_owners }}

      - name: Commit Changes
        uses: ./.github/actions/commit-changes
        with:
          commit-message: "chore: initial repository setup"
          files: ${{ env.SETUP_CONTEXT.config.repository.initial_files }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Create Pull Request
        uses: ./.github/actions/create-or-update-branch
        with:
          branch-name: 'initial-setup'
          base-branch: 'main'
          commit-changes: |
            chore: initial repository setup
            
            - feat: add initial repository files and configurations
          github-token: ${{ env.GH_TOKEN }}

      - name: Send Notification
        uses: ./.github/actions/send-notification
        with:
          notification-type: "setup_completion"
          notification-data: |
            {
              "setup-details": ${{ toJson(steps) }}
            }
          github-token: ${{ env.GH_TOKEN }}

      - name: Mark repository as configured
        run: |
          echo '{"configured": true}' > .github/enabled
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/enabled
          git commit -m "chore: mark repository as configured"
          git push
        env:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
