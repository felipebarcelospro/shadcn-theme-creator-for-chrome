name: Automated Testing Workflow

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC

permissions: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.get-packages.outputs.packages }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Context
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Get Packages
        id: get-packages
        run: |
          packages=$(jq -r '.packages.package_specific | keys | @json' .github/config.yml)
          echo "packages=$packages" >> $GITHUB_OUTPUT

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.setup.outputs.packages) }}
      fail-fast: false

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v3

      - name: Setup Context
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Install Dependencies
        id: install-dependencies
        uses: ./.github/actions/install-dependencies
        with:
          package-manager: ${{ steps.setup-context.outputs.package-manager }}
          working-directory: ${{ steps.setup-context.outputs.package-path }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Run Tests
        id: run-tests
        uses: ./.github/actions/run-tests
        with:
          test-command: ${{ steps.setup-context.outputs.test-command }}
          working-directory: ${{ steps.setup-context.outputs.package-path }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Generate Test Report
        id: generate-test-report
        uses: ./.github/actions/generate-test-report
        with:
          test-results: ${{ steps.run-tests.outputs.test-results }}
          package-name: ${{ matrix.package }}
          github-token: ${{ secrets.GH_TOKEN }}
          
      - name: Upload Test Results
        id: upload-test-results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.package }}
          path: test-report-${{ matrix.package }}.json

      - name: Notify on Test Failure
        id: notify-failure
        if: failure()
        uses: ./.github/actions/send-notification
        with:
          notification-type: "ci_cd_status"
          notification-data: |
            {
              "workflow": "Automated Testing",
              "package": "${{ matrix.package }}",
              "status": "failed",
              "details": "Check the workflow run for more information."
            }
          config-path: '.github/config.yml'
          github-token: ${{ secrets.GH_TOKEN }}
