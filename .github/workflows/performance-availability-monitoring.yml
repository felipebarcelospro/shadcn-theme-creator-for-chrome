name: Performance and Availability Monitoring Workflow

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:

permissions: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      apps_configuration: ${{ steps.setup-context.outputs.apps_configuration }}
      performance_monitoring: ${{ steps.setup-context.outputs.performance_monitoring }}
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Context
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ env.GH_TOKEN }}

  monitor:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ needs.setup.outputs.apps_configuration }}
      fail-fast: false
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Availability
        id: check-availability
        uses: ./.github/actions/check-site-availability
        with:
          urls: ${{ matrix.package.ci_cd.performance_monitoring.urls_to_monitor }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Measure Performance
        id: measure-performance
        uses: ./.github/actions/measure-site-performance
        with:
          urls: ${{ matrix.package.ci_cd.performance_monitoring.urls_to_monitor }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Analyze Results
        id: analyze-results
        uses: ./.github/actions/analyze-performance-results
        with:
          availability-status: ${{ steps.check-availability.outputs.availability_status }}
          performance-metrics: ${{ steps.measure-performance.outputs.performance_metrics }}
          thresholds: ${{ needs.setup.outputs.performance_monitoring }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Create Issues (if needed)
        id: create-issues
        if: steps.analyze-results.outputs.issue_type != ''
        uses: ./.github/actions/create-issue
        with:
          issue-type: ${{ steps.analyze-results.outputs.issue_type }}
          issue-details: ${{ steps.analyze-results.outputs.issue_details }}
          labels: ${{ needs.setup.outputs.performance_monitoring }}
          github-token: ${{ env.GH_TOKEN }}

      - name: Send Notifications
        id: send-notifications
        uses: ./.github/actions/send-notification
        with:
          notification-type: "performance_availability"
          notification-data: |
            {
              "analysis-report": ${{ steps.analyze-results.outputs.analysis_report }},
              "issue-url": "${{ steps.create-issues.outputs.issue_url }}"
            }
          github-token: ${{ env.GH_TOKEN }}

      - name: Send Webhook
        id: send-webhook
        uses: ./.github/actions/send-webhook
        with:
          webhook-type: "performance_availability_data"
          webhook-data: |
            {
              "performance-data": ${{ steps.measure-performance.outputs.performance_metrics }},
              "availability-data": ${{ steps.check-availability.outputs.availability_status }}
            }
          webhook-url: ${{ matrix.package.plugins.webhook.url }}
          github-token: ${{ env.GH_TOKEN }}

  create-monitoring-failure-issue:
    needs: [setup, monitor]
    if: failure()
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Monitoring Failure Issue
        uses: ./.github/actions/create-issue
        with:
          issue-title: "Performance Monitoring Failed"
          issue-body: "The performance and availability monitoring workflow encountered an error. Manual check required."
          labels: '["high-priority", "monitoring-error"]'
          github-token: ${{ env.GH_TOKEN }}
