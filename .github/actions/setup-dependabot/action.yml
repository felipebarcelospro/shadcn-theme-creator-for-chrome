name: Setup Dependabot
description: Configures Dependabot for the repository

inputs:
  github-token:
    description: 'GitHub token for authentication'
    required: true
  ecosystems:
    description: 'JSON array of ecosystems to enable Dependabot for'
    required: true
  config:
    description: 'JSON object containing Dependabot configuration'
    required: true

runs:
  using: 'composite'
  steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Setup Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.x'

  - name: Install dependencies
    shell: bash
    run: |
      pip install PyYAML

  - name: Configure Dependabot
    id: configure-dependabot
    shell: python
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
      ECOSYSTEMS: ${{ inputs.ecosystems }}
      CONFIG: ${{ inputs.config }}
    run: |
      import os
      import json
      import yaml
      from github import Github

      def setup_dependabot():
          ecosystems = json.loads(os.environ['ECOSYSTEMS'])
          config = json.loads(os.environ['CONFIG'])

          dependabot_config = {
              'version': 2,
              'updates': [
                  {
                      'package-ecosystem': ecosystem,
                      'directory': '/',
                      'schedule': {'interval': 'weekly'},
                      **config
                  } for ecosystem in ecosystems
              ]
          }

          yaml_config = yaml.dump(dependabot_config)

          github_token = os.environ['GITHUB_TOKEN']
          repo_name = os.environ['GITHUB_REPOSITORY']

          g = Github(github_token)
          repo = g.get_repo(repo_name)

          try:
              contents = repo.get_contents('.github/dependabot.yml')
              repo.update_file(
                  contents.path,
                  'Update Dependabot configuration',
                  yaml_config,
                  contents.sha
              )
              print('Dependabot configuration updated successfully')
          except:
              repo.create_file(
                  '.github/dependabot.yml',
                  'Add Dependabot configuration',
                  yaml_config
              )
              print('Dependabot configuration created successfully')

          print('::set-output name=config-created::true')

      setup_dependabot()

outputs:
  config-created:
    description: 'Indicates whether the Dependabot configuration was successfully created'
    value: ${{ steps.configure-dependabot.outputs.config-created }}
