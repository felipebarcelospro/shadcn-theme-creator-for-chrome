name: 'Create Discussion Post'
description: 'Automatically creates discussion posts for important announcements or to gather feedback'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true
  discussion-title:
    description: 'Title of the discussion'
    required: true
  discussion-content:
    description: 'Content of the discussion'
    required: true
  category:
    description: 'Category for the discussion (e.g., Announcements)'
    required: true

outputs:
  created-discussion-url:
    description: 'URL of the created discussion'
  creation-status:
    description: 'Status of the discussion creation process'

runs:
  using: "composite"
  steps:
  - name: Create Discussion
    id: create-discussion
    uses: fjogeleit/http-request-action@v1
    with:
      url: https://api.github.com/graphql
      method: 'POST'
      bearerToken: ${{ inputs.github-token }}
      contentType: 'application/json'
      data: >
        {
          "query": "mutation($input: CreateDiscussionInput!) { createDiscussion(input: $input) { discussion { id url } } }",
          "variables": {
            "input": {
              "repositoryId": "${{ github.repository_id }}",
              "title": "${{ inputs.discussion-title }}",
              "body": "${{ inputs.discussion-content }}",
              "categoryId": "${{ inputs.category }}"
            }
          }
        }

  - name: Process and validate response
    id: process-response
    uses: actions/github-script@v6
    with:
      script: |
        const response = JSON.parse(process.env.CREATE_DISCUSSION_RESPONSE);
        const discussion = response.data?.createDiscussion?.discussion;

        if (!discussion) {
          core.setFailed('Failed to create discussion');
          return;
        }

        core.setOutput('created-discussion-url', discussion.url);
        core.setOutput('creation-status', 'success');

        console.log('Created discussion:', discussion.url);
    env:
      CREATE_DISCUSSION_RESPONSE: ${{ steps.create-discussion.outputs.response }}

  - name: Verify outputs
    if: success()
    run: |
      if [ -z "${{ steps.process-response.outputs.created-discussion-url }}" ]; then
        echo "Error: Created discussion URL is empty"
        exit 1
      fi
      if [ "${{ steps.process-response.outputs.creation-status }}" != "success" ]; then
        echo "Error: Discussion creation failed"
        exit 1
      fi
    shell: bash
