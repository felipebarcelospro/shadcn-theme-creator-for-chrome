name: 'Auto Merge Updates'
description: 'Automatically merges dependency update pull requests that meet predefined criteria'

inputs:
  pr-details:
    description: 'Details of the pull request to be merged'
    required: true
  auto-merge-settings:
    description: 'Path to the auto-merge settings configuration file'
    required: true
  github-token:
    description: 'GitHub token for API access'
    required: true

outputs:
  merge-status:
    description: 'Status of the merge operation'
  merged-pr-details:
    description: 'Details of the merged pull request'

runs:
  using: 'composite'
  steps:
  - name: Debug - Input values
    shell: bash -l {0}
    run: |
      echo "PR details: ${{ inputs.pr-details }}"
      echo "Auto-merge settings: ${{ inputs.auto-merge-settings }}"

  - name: Load auto-merge configuration
    id: load-config
    shell: bash -l {0}
    run: |
      config=$(cat ${{ inputs.auto-merge-settings }})
      echo "config=$config" >> $GITHUB_OUTPUT

  - name: Debug - Loaded configuration
    shell: bash -l {0}
    run: |
      echo "Loaded configuration: ${{ steps.load-config.outputs.config }}"

  - name: Validate PR against auto-merge criteria
    id: validate-pr
    shell: bash -l {0}
    run: |
      pr_details='${{ inputs.pr-details }}'
      config='${{ steps.load-config.outputs.config }}'

      # Implement validation logic here
      # This is a placeholder implementation
      if [[ $pr_details == *"dependency update"* ]]; then
        echo "can-merge=true" >> $GITHUB_OUTPUT
      else
        echo "can-merge=false" >> $GITHUB_OUTPUT
      fi

  - name: Debug - Validation result
    shell: bash -l {0}
    run: |
      echo "Can merge: ${{ steps.validate-pr.outputs.can-merge }}"

  - name: Merge PR
    if: steps.validate-pr.outputs.can-merge == 'true'
    id: merge-pr
    shell: bash -l {0}
    env:
      GITHUB_TOKEN: ${{ inputs.github-token }}
    run: |
      pr_number=$(echo '${{ inputs.pr-details }}' | jq -r .number)
      gh pr merge $pr_number --auto --merge
      echo "merge-status=success" >> $GITHUB_OUTPUT
      echo "merged-pr-details=${{ inputs.pr-details }}" >> $GITHUB_OUTPUT

  - name: Debug - Merge result
    if: steps.validate-pr.outputs.can-merge == 'true'
    shell: bash -l {0}
    run: |
      echo "Merge status: ${{ steps.merge-pr.outputs.merge-status }}"
      echo "Merged PR details: ${{ steps.merge-pr.outputs.merged-pr-details }}"

  - name: Set merge status for non-mergeable PR
    if: steps.validate-pr.outputs.can-merge != 'true'
    shell: bash -l {0}
    run: |
      echo "merge-status=skipped" >> $GITHUB_OUTPUT
      echo "merged-pr-details=null" >> $GITHUB_OUTPUT

  - name: Debug - Final outputs
    shell: bash -l {0}
    run: |
      echo "Final merge status: ${{ steps.merge-pr.outputs.merge-status || 'skipped' }}"
      echo "Final merged PR details: ${{ steps.merge-pr.outputs.merged-pr-details || 'null' }}"
