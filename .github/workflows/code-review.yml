name: Code Review Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      affected_packages: ${{ steps.determine-affected-packages.outputs.affected_apps }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Context
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Determine Affected Packages
        id: determine-affected-packages
        uses: ./.github/actions/determine-affected-packages
        with:
          changed_files: ${{ steps.setup-context.outputs.changed_files }}
          apps_configuration: ${{ steps.setup-context.outputs.apps_configuration }}
          github-token: ${{ secrets.GH_TOKEN }}

  code-review:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.setup.outputs.affected_packages) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Context
        id: setup-context
        uses: ./.github/actions/setup-context-and-prerequisites
        with:
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Assign Reviewers
        uses: ./.github/actions/auto-assign
        with:
          item-type: 'pr'
          item-number: ${{ github.event.pull_request.number }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Run Code Quality Checks
        id: run-code-quality
        uses: ./.github/actions/run-code-quality
        with:
          package-name: ${{ matrix.package }}
          config-file: ${{ fromJson(steps.setup-context.outputs.config-data).pr_management.pr_analysis.tools[0] }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Post Code Quality Results
        uses: ./.github/actions/post-pr-comment
        with:
          pr-number: ${{ github.event.pull_request.number }}
          comment-content: ${{ steps.run-code-quality.outputs.quality-report }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Check Review Guidelines
        uses: ./.github/actions/check-review-guidelines
        with:
          pr-description: ${{ github.event.pull_request.body }}
          review-comments: ${{ github.event.review.body || '' }}
          guideline-rules: ${{ fromJson(steps.setup-context.outputs.config-data).pr_management.code_review.review_guidelines }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Enforce Review Approval
        id: enforce-review-approval
        uses: ./.github/actions/enforce-review-approval
        with:
          pr-number: ${{ github.event.pull_request.number }}
          approval-requirements: ${{ fromJson(steps.setup-context.outputs.config-data).pr_management.code_review.required_approvals }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Update PR Status
        uses: ./.github/actions/update-pr-status
        with:
          pr-number: ${{ github.event.pull_request.number }}
          review-status: ${{ steps.enforce-review-approval.outputs.approval-status }}
          code-quality-results: ${{ steps.run-code-quality.outputs.quality-report }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Notify Reviewers
        uses: ./.github/actions/send-notification
        with:
          notification-type: "review_reminder"
          notification-data: |
            {
              "pr-url": "${{ github.event.pull_request.html_url }}",
              "assigned-reviewers": ${{ toJson(github.event.pull_request.requested_reviewers) }}
            }
          github-token: ${{ secrets.GH_TOKEN }}
