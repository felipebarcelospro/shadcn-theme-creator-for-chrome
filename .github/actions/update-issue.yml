name: 'Update Issue'
description: 'Updates an existing GitHub issue with new content'

inputs:
  issue-number:
    description: 'The number of the issue to update'
    required: true
  comment-body:
    description: 'The content to add as a comment to the issue'
    required: false
  update-body:
    description: 'Whether to update the issue body'
    required: false
    default: 'false'
  body-update:
    description: 'The content to update in the issue body'
    required: false

outputs:
  update-status:
    description: 'Status of the update operation'

runs:
  using: 'composite'
  steps:
  - name: Debug inputs
    shell: bash
    run: |
      echo "Debug: Input values"
      echo "issue-number: ${{ inputs.issue-number }}"
      echo "comment-body: ${{ inputs.comment-body }}"
      echo "update-body: ${{ inputs.update-body }}"
      echo "body-update: ${{ inputs.body-update }}"

  - name: Update issue
    id: update-issue
    uses: actions/github-script@v6
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
        const { owner, repo } = context.repo;
        const issueNumber = '${{ inputs.issue-number }}';

        try {
          if ('${{ inputs.comment-body }}') {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: issueNumber,
              body: '${{ inputs.comment-body }}'
            });
            console.log('Comment added successfully');
          }

          if ('${{ inputs.update-body }}' === 'true' && '${{ inputs.body-update }}') {
            const { data: issue } = await github.rest.issues.get({
              owner,
              repo,
              issue_number: issueNumber
            });

            await github.rest.issues.update({
              owner,
              repo,
              issue_number: issueNumber,
              body: `${issue.body}\n\n${{ inputs.body-update }}`
            });
            console.log('Issue body updated successfully');
          }

          core.setOutput('update-status', 'success');
        } catch (error) {
          console.error('Error updating issue:', error);
          core.setOutput('update-status', 'failure');
          core.setFailed('Failed to update issue');
        }

  - name: Error handling
    if: failure()
    run: |
      echo "An error occurred during the issue update process"
      echo "update-status=failure" >> $GITHUB_OUTPUT
    shell: bash

