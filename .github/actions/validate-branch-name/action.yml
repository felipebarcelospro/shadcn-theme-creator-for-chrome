name: 'Validate Branch Name'
description: 'Validates branch names against predefined naming conventions'

inputs:
  branch-name:
    description: 'Name of the branch to validate'
    required: true
  feature-prefix:
    description: 'Prefix for feature branches'
    required: true
    default: 'feature/'
  release-prefix:
    description: 'Prefix for release branches'
    required: true
    default: 'release/'
  hotfix-prefix:
    description: 'Prefix for hotfix branches'
    required: true
    default: 'hotfix/'
  main-branches:
    description: 'List of main branches'
    required: true
    default: '["main", "develop"]'
  config-path:
    description: 'Path to the branch naming configuration file'
    required: false
    default: '.github/branch-naming-config.json'

outputs:
  is-valid:
    description: 'Boolean indicating if the branch name is valid'
  validation-message:
    description: 'Detailed validation message or error explanation'

runs:
  using: 'composite'
  steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: Debug - Input values
    shell: bash -l {0}
    run: |
      echo "Branch name: ${{ inputs.branch-name }}"
      echo "Feature prefix: ${{ inputs.feature-prefix }}"
      echo "Release prefix: ${{ inputs.release-prefix }}"
      echo "Hotfix prefix: ${{ inputs.hotfix-prefix }}"
      echo "Main branches: ${{ inputs.main-branches }}"
      echo "Config path: ${{ inputs.config-path }}"

  - name: Load branch naming configuration
    id: load-config
    shell: bash -l {0}
    run: |
      if [ -f "${{ inputs.config-path }}" ]; then
        echo "config=$(cat ${{ inputs.config-path }})" >> $GITHUB_OUTPUT
      else
        echo "config={}" >> $GITHUB_OUTPUT
      fi

  - name: Validate branch name
    id: validate
    shell: bash -l {0}
    run: |
      branch_name="${{ inputs.branch-name }}"
      config='${{ steps.load-config.outputs.config }}'
      main_branches='${{ inputs.main-branches }}'

      is_valid=true
      message="Branch name is valid"

      if [[ " ${main_branches} " =~ " ${branch_name} " ]]; then
        is_valid=true
      elif [[ $branch_name == ${{ inputs.feature-prefix }}* ]]; then
        is_valid=true
      elif [[ $branch_name == ${{ inputs.release-prefix }}* ]]; then
        is_valid=true
      elif [[ $branch_name == ${{ inputs.hotfix-prefix }}* ]]; then
        is_valid=true
      else
        is_valid=false
        message="Invalid branch name format"
      fi

      echo "is-valid=$is_valid" >> $GITHUB_OUTPUT
      echo "validation-message=$message" >> $GITHUB_OUTPUT

  - name: Debug - Validation result
    shell: bash -l {0}
    run: |
      echo "Is valid: ${{ steps.validate.outputs.is-valid }}"
      echo "Validation message: ${{ steps.validate.outputs.validation-message }}"
