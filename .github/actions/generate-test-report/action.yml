name: 'Generate Test Report'
description: 'Generates a comprehensive test report from unit, integration, and E2E test results'

inputs:
  unit-test-results:
    description: 'Results from unit tests'
    required: true
  integration-test-results:
    description: 'Results from integration tests'
    required: true
  e2e-test-results:
    description: 'Results from E2E tests'
    required: true
  package-name:
    description: 'Name of the package being tested'
    required: true

outputs:
  test-report:
    description: 'Generated test report'
  report-summary:
    description: 'Summary of the test report'

runs:
  using: 'composite'
  steps:
  - name: Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: '20'

  - name: Install dependencies
    run: npm ci
    shell: bash

  - name: Generate report content
    id: generate-report
    uses: ./.github/actions/ai-generate-content
    with:
      content-type: 'test report'
      context-data: |
        {
          "unitTestResults": ${{ inputs.unit-test-results }},
          "integrationTestResults": ${{ inputs.integration-test-results }},
          "e2eTestResults": ${{ inputs.e2e-test-results }},
          "packageName": "${{ inputs.package-name }}"
        }
      additional-context: |
        Generate a comprehensive test report summarizing the results of unit, integration, and E2E tests.
        Include overall pass/fail status, test coverage, and highlight any critical failures or performance issues.
      tone: 'technical'
      max-length: '5000'

  - name: Process generated report
    id: process-report
    run: |
      echo "${{ steps.generate-report.outputs.generated-content }}" > full_report.md
      summary=$(echo "${{ steps.generate-report.outputs.generated-content }}" | sed -n '1,10p')
      echo "REPORT_SUMMARY<<EOF" >> $GITHUB_ENV
      echo "$summary" >> $GITHUB_ENV
      echo "EOF" >> $GITHUB_ENV
    shell: bash

  - name: Set outputs
    run: |
      echo "test-report=$(cat full_report.md)" >> $GITHUB_OUTPUT
      echo "report-summary=$REPORT_SUMMARY" >> $GITHUB_OUTPUT
    shell: bash

  - name: Debug - Report generation
    run: |
      echo "Test report generated for package: ${{ inputs.package-name }}"
      echo "Report summary:"
      echo "$REPORT_SUMMARY"
    shell: bash

