name: 'Auto Merge Updates'
description: 'Automatically merges dependency update pull requests that meet predefined criteria'

inputs:
  pr-details:
    description: 'Details of the pull request to be merged'
    required: true
  auto-merge-settings:
    description: 'Path to the auto-merge settings configuration file'
    required: true

outputs:
  merge-status:
    description: 'Status of the merge operation'
  merged-pr-details:
    description: 'Details of the merged pull request'

runs:
  using: 'node20'
  main: 'index.js'

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Debug - Input values
      run: |
        echo "PR details: ${{ inputs.pr-details }}"
        echo "Auto-merge settings: ${{ inputs.auto-merge-settings }}"

    - name: Load auto-merge configuration
      id: load-config
      run: |
        config=$(cat ${{ inputs.auto-merge-settings }})
        echo "::set-output name=config::$config"

    - name: Debug - Loaded configuration
      run: |
        echo "Loaded configuration: ${{ steps.load-config.outputs.config }}"

    - name: Validate PR against auto-merge criteria
      id: validate-pr
      run: |
        pr_details='${{ inputs.pr-details }}'
        config='${{ steps.load-config.outputs.config }}'

        # Implement validation logic here
        # This is a placeholder implementation
        if [[ $pr_details == *"dependency update"* ]]; then
          echo "::set-output name=can-merge::true"
        else
          echo "::set-output name=can-merge::false"
        fi

    - name: Debug - Validation result
      run: |
        echo "Can merge: ${{ steps.validate-pr.outputs.can-merge }}"

    - name: Merge PR
      if: steps.validate-pr.outputs.can-merge == 'true'
      id: merge-pr
      run: |
        pr_number=$(echo '${{ inputs.pr-details }}' | jq -r .number)
        gh pr merge $pr_number --auto --merge
        echo "::set-output name=merge-status::success"
        echo "::set-output name=merged-pr-details::${{ inputs.pr-details }}"

    - name: Debug - Merge result
      if: steps.validate-pr.outputs.can-merge == 'true'
      run: |
        echo "Merge status: ${{ steps.merge-pr.outputs.merge-status }}"
        echo "Merged PR details: ${{ steps.merge-pr.outputs.merged-pr-details }}"

    - name: Set merge status for non-mergeable PR
      if: steps.validate-pr.outputs.can-merge != 'true'
      run: |
        echo "::set-output name=merge-status::skipped"
        echo "::set-output name=merged-pr-details::null"

    - name: Debug - Final outputs
      run: |
        echo "Final merge status: ${{ steps.merge-pr.outputs.merge-status || 'skipped' }}"
        echo "Final merged PR details: ${{ steps.merge-pr.outputs.merged-pr-details || 'null' }}"
